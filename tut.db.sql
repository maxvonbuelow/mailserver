-- BASIC SETUP
CREATE TABLE domains (
  id serial PRIMARY KEY,
  "domain" CHARACTER VARYING(45) NOT NULL UNIQUE
);

CREATE TABLE forwardings (
  id SERIAL PRIMARY KEY,
  "source" CHARACTER VARYING(80) NOT NULL UNIQUE,
  destination text NOT NULL
);

CREATE TABLE users (
  id serial PRIMARY KEY,
  email CHARACTER VARYING(80) NOT NULL UNIQUE,
  password CHARACTER VARYING(255) NOT NULL,
  quota INTEGER NOT NULL DEFAULT 0 -- IF YOU WANT QUOTA
);

CREATE TABLE transports (
  id serial PRIMARY KEY,
  "domain" CHARACTER VARYING(128) NOT NULL UNIQUE,
  transport CHARACTER VARYING(128) NOT NULL
);

-- IF YOU WANT EXPIRES (DOVECOT ONLY)
CREATE TABLE expires (
  username CHARACTER VARYING(100) NOT NULL,
  mailbox CHARACTER VARYING(255) NOT NULL,
  expire_stamp INTEGER NOT NULL,
  PRIMARY KEY (username, mailbox)
);

CREATE OR REPLACE FUNCTION merge_expires() RETURNS TRIGGER AS $$
BEGIN
  UPDATE expires SET expire_stamp = NEW.expire_stamp
    WHERE username = NEW.username AND mailbox = NEW.mailbox;
  IF FOUND THEN
    RETURN NULL;
  ELSE
    RETURN NEW;
  END IF;
END;
$$ LANGUAGE plpgsql;
 
CREATE TRIGGER mergeexpires BEFORE INSERT ON expires
   FOR EACH ROW EXECUTE PROCEDURE merge_expires();

-- IF YOU AUTHENTICATED RELAYS
CREATE TABLE sender_relays (
  id SERIAL PRIMARY KEY,
  "source" CHARACTER VARYING(80) NOT NULL UNIQUE,
  relay text NOT NULL
);
 
CREATE TABLE relay_auth (
  id SERIAL PRIMARY KEY,
  "source" CHARACTER VARYING(80) NOT NULL UNIQUE,
  username CHARACTER VARYING(80) NOT NULL,
  password CHARACTER VARYING(200) NOT NULL
);
